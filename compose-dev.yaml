services:
  web:
    container_name: fit-php
    build:
      context: docker
      dockerfile: app.Dockerfile
    ports:
      - "8080:80"
    volumes:
      - ./src:/var/www/html
    depends_on:
      - db
    networks:
      - app

  db:
    container_name: fit-psql
    image: postgres:17.0
    restart: always
    environment:
      - "POSTGRES_USER=fit-admin"
      - "POSTGRES_DB=fitness"
      - "POSTGRES_PASSWORD=p4ssw0rd"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fit-admin -d fitness"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5441:5432"
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - app

  composer:
    container_name: composer
    build:
      context: docker
      dockerfile: composer.Dockerfile
    volumes:
      - ./src:/var/www/html
    restart: "no"
    profiles:
      - composer

  migrate:
    image: migrate/migrate:v4.18.2
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_URL: "postgres://fit-admin:p4ssw0rd@db:5432/fitness?sslmode=disable"
    command:
      - "-path=/migrations"
      - "-database=postgres://fit-admin:p4ssw0rd@db:5432/fitness?sslmode=disable"
      - "up"
    volumes:
      - ./migrations:/migrations
    networks:
      - app

  frontend:
    container_name: fit-front
    build:
      context: ../fitness-client
      dockerfile: Dockerfile
      args:
        USER_ID: 1000
        GROUP_ID: 1000
    ports:
      - "5178:5178"
    volumes:
      - ../fitness-client:/home/node/app
      - /home/node/app/node_modules
    environment:
      - USER_ID=1000
      - GROUP_ID=1000
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
    networks:
      - app

networks:
  app:
    driver: bridge

volumes:
  web:
  db:
